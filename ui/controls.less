/**
 * Copyright 2016 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* We use classes and not ids since there might be multiple
 shaka elements on the page.*/
/* TODO: insert reset attributes into all classes */

/* Mixins */
.user-select(@value: none) {
  user-select: @value;
  -webkit-user-select: @value;
  -moz-user-select: @value;
  -ms-user-select: @value;
}

.fullscreen() {
  width: 100%;
  height: 100%;
}

.hidden() {
  display: none;
}


/* Styles */
/* This insures video and the container have the same height. */
.shaka-video {
  display: block;
}


.shaka-overlay-parent {
  /* Makes this a positioned ancestor of .overlay */
  position: relative;
}

.shaka-overlay {
  /* Allows this to be positioned relative to a containing .overlay-parent */
  position: absolute;
}

.shaka-buffering-spinner {
  /* IE-specific workaround for centering the actual spinner SVG inside */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.shaka-controls-container {
  width: 100%;
  height: 100%;

  /* The two-value settings are shorthand for setting-top=setting-bottom &
  setting-left=setting-right. */
  padding: 12px 5px;
  margin: auto;
  box-sizing: border-box;

  /* marks this as a flex container */
  display: flex;
  /* Flex-direction property defines in which
  direction the container wants to stack it's children */
  flex-direction: column;
  /* Justify-content is used to align the flex items.
   Flex-end value aligns the flex items at the end of the
   container. */
  justify-content: flex-end;
  align-items: center;
  transition: opacity 0.3s;

  bottom: 0px;
  background-image:
    linear-gradient(to top,
          rgba(0, 0, 0, 1) 0,
          rgba(0, 0, 0, 0) 92px);
}

.shaka-controls-button-panel {
  width: 100%;
  margin-right: 16px;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  z-index: 0;
  overflow: hidden;
  bottom: auto;

  min-width: 48px;

  font-size: 12px;
  font-weight: normal;  /* Make sure that we don't inherit non-defaults. */
  font-style: normal;

  .user-select();

  button {
    color: white;
    height: 32px;
    padding: 1px 6px;
    background: transparent;
    border: 0;
    cursor: pointer;
  }

  button:active {
    background: rgba(100, 100, 100, 0.4);
  }

  button:disabled {
    color: rgba(255, 255, 255, 0.3);
  }

  input[type="range"] {
    cursor: pointer;
  }

  div {
    display: flex;
    width: 100%;
  }

  /* Always show controls while casting */
  &.shaka-casting {
    opacity: 1;

    .shaka-fullscreen-button {
      /* Hide fullscreen button while casting */
      display: none;
    }
  }
}


/* NOTE: These fullscreen pseudo-classes can't be combined.  Browsers ignore
 * the rest of the list once they hit one prefix they don't support.
 */
.shaka-video-container:fullscreen { .fullscreen; }
.shaka-video-container:-webkit-full-screen { .fullscreen; }
.shaka-video-container:-moz-full-screen { .fullscreen; }
.shaka-video-container:-ms-fullscreen { .fullscreen; }

.shaka-cast-receiver-name {
  display: none;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  font-size: 150%;
  padding: 5px;

  bottom: 50px;
  left: 0;
  right: 0;
  margin: auto;
  width: max-content;
}

.shaka-play-button-container {
  /* These settings keep the container in the middle
  of the video, above the controls */
  margin: 0;
  top: 0;
  left: 0;
  bottom: 17px;
  right: 0;

  /* IE-specific hack for vertical centering */
  width: 100%;
  height: 100%;

  /* These settings keep the button in the middle
  of the container */
  display: flex;
  justify-content: center;
  align-items: center;
}

.shaka-play-button {
  /* TODO(b/116328412): resize play button in CSS only, not in JS */
  /* Button width and height will be changed when
  the dimensions of the video change.
  See shaka.ui.Controls.prototype.resizePlayButton_ */
  width: 56px;
  height: 56px;
  /* To be properly positioned in the center, this should have no margin or
  padding.  These might have been set for buttons generally by the app or
  user-agent. */
  margin: 0;
  padding: 0;

  border-radius: 50%;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 20px 0px;
  border: none;
  /* The play arrow is a picture. It is treated a background image.
  The following settings insure it shows only once and in the
  center of the button. */
  background-size: 50%;
  background-repeat: no-repeat;
  background-position: center center;
  background-color: rgba(255, 255, 255, .9);

  /* Gradually change opacity using cubic-bezier timing function */
  transition: opacity cubic-bezier(0.4, 0.0, 0.6, 1) 600ms;

  &[icon="play"] {
    background-image: data-uri('play_arrow.svg');
  }

  &[icon="pause"] {
    background-image: data-uri('pause.svg');
  }
}

.shaka-time-container {
  font-family: Roboto-Regular, Roboto, sans-serif;
  font-size: 16px;
  color: rgb(255, 255, 255);
  letter-spacing: 0px;

  /* Positioning settings */
  padding-left: 19px;
  margin-bottom: 5px;
  align-self: flex-end;

  cursor: default;
  .user-select();
}


/* NOTE: pseudo-elements for different browsers can't be combined with commas.
 * Browsers will ignore styles if any pseudo-element in the list is unknown.
 */

/* Seek bar and volume bar */
.thumb-style() {
  width: 10px;
  height: 10px;
  background-color: rgb(255, 255, 255);
  border-radius: 5px;
}

.track-style() {
  background-color: transparent;
  outline: none;
}

.shaka-seek-bar {
  margin: 9px 0 0 0;
  width: 96.5%;
  height: 4px;
  border-radius: 2px;
  /* Make sure clicking at the very top of the seek bar still takes effect and
  is not confused with clicking the video to play/pause it */
  z-index: 1;
}


.shaka-volume-bar {
  min-width: 15px;
  max-width: 100px;
  position: relative;
  /* TODO: find a better way to center this thing and remove top */
  top: 13px;
  height: 3px;
  /* spacing consistent with padding in the buttons it lives with */
  margin: 1px 6px;
}


/* hide volume slider on mobile-sized screens */
@media screen and (max-width: 550px) {
 .shaka-volume-bar {
    display: none;
  }
}


.shaka-seek-bar, .shaka-volume-bar {
  -webkit-appearance: none;

  /* Explicitly set padding to 0 for IE */
  padding: 0;

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    .thumb-style();
  }

  &::-moz-range-thumb {
    .thumb-style();
  }

  &::-ms-thumb {
    .thumb-style();
  }

  /* turn off tooltips for the seekBar and volumeBar on IE */
  &::-ms-tooltip {
    .hidden();
  }

  /* removes mozilla default styling */
  &::-moz-range-track {
    .track-style()
  }

  /* removes IE default styling */
  &::-ms-track, &::-ms-fill-lower, &::-ms-fill-upper {
    .track-style()
  }
}

.shaka-settings-menu {
  max-height: 250px;
  min-width: 180px;

  /* It's okay to add a vertical scroll if there are too many items,
  but not a horizontal one. */
  overflow-x: hidden;
  overflow-y: auto;

  white-space: nowrap; /* Don't wrap text to the next line. */
  background: #FFFFFF;
  box-shadow: 0 1px 9px 0 rgba(0,0,0,0.40);
  border-radius: 2px;
  display: none;
  flex-direction: column;
  position: absolute;
  z-index: 1;
  right: 15px;
  bottom: 30px;

  button {
    font-size: 14px;
    background: transparent;
    color: black;
    display: flex;
    align-items: center;
    border: none;
    min-height: 30px;
    padding: 3.5px 6px;

    &:hover {
      background: rgb(224, 224, 224);
    }
  }

  i {
    padding-left: 10px;
  }

  &.shaka-low-position {
    bottom: 15px;
  }
}


.shaka-overflow-menu span {
  text-align: left;
  position: relative;
  font-family: Roboto-Regular, Roboto, sans-serif;
  left: 13px;
}

.shaka-overflow-button-label {
  position: relative;
  display: flex;
  flex-direction: column;
}

.shaka-current-selection-span {
  color: rgba(0, 0, 0, 0.54);
}


.shaka-resolutions,
.shaka-audio-languages,
.shaka-text-languages {
  span {
    margin-left: 54px;
  }
}


.shaka-back-to-overflow-button {
  span {
    margin-left: 0;
  }

  i {
    padding-right: 20px;
  }
}


.shaka-cast-connected-button {
  .hidden();
}


/* Add 'button' to hidden and displayed classes
to make them override display setting previously set in
.overflowMenu button.
See https://goo.gl/egXAJY for explanation of
how CSS cascade rules work. */
button.shaka-hidden,
.shaka-hidden {
  .hidden();
}

button.shaka-displayed,
.shaka-displayed {
  display: flex;
}

.shaka-opaque {
  opacity: 1;
}

.shaka-transparent {
  opacity: 0;
}


/*
The SVG/CSS buffering spinner is based on http://codepen.io/jczimm/pen/vEBpoL
Some local modifications have been made.

Copyright (c) 2016 by jczimm

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

.shaka-spinner-svg {
  animation: rotate 2s linear infinite;
  transform-origin: center center;

  width: 100px;
  height: 100px;

  position: absolute;
  top: 0; bottom: 0; left: 0; right: 0;
  margin: auto;
}

.shaka-spinner-path {
  /* Fall back for IE 11, where the stroke properties are not animated,
     but the spinner still rotates. */
  stroke: #202124;
  stroke-dasharray: 20, 200;
  stroke-dashoffset: 0;

  animation: dash 1.5s ease-in-out infinite;
  stroke-linecap: round;
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35px;
  }
  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124px;
  }
}


/* Outline on focus is important for accessibility, but
it doesn't look great. This removes the outline for
mouse users while leaving it for keyboard users. */
.shaka-controls-container:not(.shaka-keyboard-navigation) {
  button:focus,
  input:focus {
    outline: none;
  }

  button::-moz-focus-inner,
  input::-moz-focus-outer {
    border: 0;
  }
}

.shaka-auto-span {
  left: 17px;
}

.shaka-captions-on {
  color: black;
}

.shaka-captions-off {
  color: grey;
}
